<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>BLOG</title>
  <icon>https://www.gravatar.com/avatar/454077d0e2bc87469e63b9a98961ccff</icon>
  <subtitle>周凌宇</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="httpS://zly1024.github.io/"/>
  <updated>2019-07-31T02:02:55.096Z</updated>
  <id>httpS://zly1024.github.io/</id>
  
  <author>
    <name>周凌宇</name>
    <email>15823217944@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android开发学习总结(三)</title>
    <link href="httpS://zly1024.github.io/2019/07/30/Android%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%E4%B8%89/"/>
    <id>httpS://zly1024.github.io/2019/07/30/Android开发学习总结-三/</id>
    <published>2019-07-30T07:55:45.000Z</published>
    <updated>2019-07-31T02:02:55.096Z</updated>
    
    <content type="html"><![CDATA[<h1 id="android开发基本组件总结"><a class="markdownIt-Anchor" href="#android开发基本组件总结"></a> Android开发基本组件总结</h1><h3 id="1textview"><a class="markdownIt-Anchor" href="#1textview"></a> 1.TextView</h3><h4 id="11基本文本视图"><a class="markdownIt-Anchor" href="#11基本文本视图"></a> 1.1.基本文本视图</h4><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/tx_1"</span>    </span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">"夕阳下的奔跑"</span>    <span class="attr">-------</span>文本</span></span><br><span class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">"#000000"</span>  <span class="attr">-------</span>文本颜色</span></span><br><span class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">"24sp"</span>  <span class="attr">-------</span>文本字体大小</span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center"</span>   <span class="attr">--------</span>文本居中</span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br></pre></td></tr></table></figure><p>效果图:</p><p><img src="https://pic.yupoo.com/zly1024/db44320c/c12ea11f.jpg" alt="基本文本视图"></p><p>若想要实现图中中划线效果:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//mtv1,mtv2为实例化的组件</span></span><br><span class="line">mtv1.getPaint().setFlags(Paint.STRIKE_THRU_TEXT_FLAG);<span class="comment">//中划线</span></span><br><span class="line">mtv1.getPaint().setAntiAlias(<span class="keyword">true</span>);<span class="comment">//去除锯齿</span></span><br><span class="line"></span><br><span class="line">mtv2.getPaint().setFlags(Paint.UNDERLINE_TEXT_FLAG);<span class="comment">//下划线</span></span><br></pre></td></tr></table></figure><p>若要</p><h4 id="12拓展文本视图跑马灯省略效果"><a class="markdownIt-Anchor" href="#12拓展文本视图跑马灯省略效果"></a> 1.2.拓展文本视图(跑马灯,省略效果)</h4><ul><li>省略效果(需控制组件的长度)</li></ul><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/tx_2"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"100dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:ellipsize</span>=<span class="string">"end"</span>   <span class="attr">---------ellipsize</span>属性设置为<span class="attr">end</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:maxLines</span>=<span class="string">"1"</span>  <span class="attr">---------</span>控制最大行数为一行  </span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">"夕阳下的奔跑"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">"#000000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">"24sp"</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>跑马灯效果(基本的)</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/tx_3"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">          </span></span><br><span class="line"><span class="tag">    <span class="attr">android:ellipsize</span>=<span class="string">"marquee"</span> <span class="attr">------</span>跑马灯效果</span></span><br><span class="line"><span class="tag">    <span class="attr">android:focusable</span>=<span class="string">"true"</span>  <span class="attr">------</span>是否获取焦点</span></span><br><span class="line"><span class="tag">    <span class="attr">android:focusableInTouchMode</span>=<span class="string">"true"</span> <span class="attr">------</span>通过<span class="attr">Touch</span>获取焦点</span></span><br><span class="line"><span class="tag">    <span class="attr">android:marqueeRepeatLimit</span>=<span class="string">"marquee_forever"</span> <span class="attr">-------</span>无限循环，如果设置值为正数则就是循环滚动的次数</span></span><br><span class="line"><span class="tag">    <span class="attr">android:singleLine</span>=<span class="string">"true"</span> <span class="attr">------</span>单行显示</span></span><br><span class="line"><span class="tag">          </span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">"夕阳下的奔跑夕阳下的奔跑夕阳下的奔跑夕阳下的奔跑夕阳下的奔跑夕阳下的奔跑夕阳下的奔跑夕阳下的奔跑"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">"#000000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">"24sp"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>效果图:</p></li></ul><p><img src="https://pic.yupoo.com/zly1024/b14e254b/d012c89d.jpg" alt="跑马灯"></p><ul><li><p>跑马灯(第三方)</p><p>依赖:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">implementation <span class="string">'com.sunfusheng:marqueeview:1.3.3'</span></span><br></pre></td></tr></table></figure><p>xml:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.sunfusheng.marqueeview.MarqueeView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/marqueeView"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"50dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"#000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:padding</span>=<span class="string">"5dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:mvAnimDuration</span>=<span class="string">"1000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:mvDirection</span>=<span class="string">"left_to_right"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:mvInterval</span>=<span class="string">"1000"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:mvSingleLine</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:mvTextColor</span>=<span class="string">"#fff"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:mvTextSize</span>=<span class="string">"15sp"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>activity:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//跑马灯效果</span></span><br><span class="line"><span class="comment">//设置跑马灯的数据</span></span><br><span class="line">List&lt;String&gt; info = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">info.add(<span class="string">"广府城:"</span>);</span><br><span class="line">info.add(<span class="string">"狼王：叶歉，狼牙雇佣军首领，铁血柔情，有着清晰的头脑和明确的目标！"</span>);</span><br><span class="line">info.add(<span class="string">"野狼：李伟，追踪和反追踪高手！"</span>);</span><br><span class="line">info.add(<span class="string">"詹姆斯　M国海豹部队退役少校"</span>);</span><br><span class="line">info.add(<span class="string">"威廉　M国海豹部队退役士兵"</span>);</span><br><span class="line">info.add(<span class="string">"雪狼：杰克，电脑天才，狼牙雇佣军军师"</span>);</span><br><span class="line">info.add(<span class="string">"森林狼：峰l岚，丛林战专家"</span>);</span><br><span class="line">info.add(<span class="string">"疾风狼：清风，性格张扬，精通枪械"</span>);</span><br><span class="line">info.add(<span class="string">"毒狼：刘天尘，擅长用毒，狼牙雇佣军里御用卫生员"</span>);</span><br><span class="line">info.add(<span class="string">"飞天狼：吴焕锋，独臂，擅长飞刀。"</span>);</span><br><span class="line">info.add(<span class="string">"宋然，曾经暗夜百合的顶级杀手，虽掌管昊天集团，却也是狼牙的一份子。"</span>);</span><br><span class="line"><span class="comment">// 在代码里设置自己的动画</span></span><br><span class="line">mtv3.startWithList(info);</span><br><span class="line"><span class="comment">// 在代码里设置自己的动画</span></span><br><span class="line">mtv3.startWithList(info, R.anim.anim_right_in, R.anim.anim_left_out);</span><br></pre></td></tr></table></figure><p>效果图:</p><p>​</p></li></ul><p><img src="https://pic.yupoo.com/zly1024/b873abf1/cff9394b.jpg" alt="第三方跑马灯"></p><h3 id="2button"><a class="markdownIt-Anchor" href="#2button"></a> 2.Button</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/btn_webView"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">"30dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@drawable/bg_btn1"</span> <span class="attr">------</span>背景可以引用<span class="attr">drawable</span>文件</span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">"webView按钮"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">"#ffffff"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">"24sp"</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--drawable/bg_btn1.xml--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">"rectangle"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#0066FF"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"10dp"</span>/&gt;</span><span class="comment">&lt;!--设置圆角--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图:</p><p><img src="https://pic.yupoo.com/zly1024/67ee97c4/6934c9cb.jpg" alt="按钮"></p><h3 id="3imageview"><a class="markdownIt-Anchor" href="#3imageview"></a> 3.ImageView</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/iv_1"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"325dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"100dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"#FF3300"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:scaleType</span>=<span class="string">"fitXY"</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_image_view);</span><br><span class="line"></span><br><span class="line">    miv = findViewById(R.id.iv_1);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// miv.setImageResource();加载本地图片</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取网络图片</span></span><br><span class="line">    Glide.with(<span class="keyword">this</span>).load(<span class="string">"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1564030177709&amp;di=0c0e5ca791a9e2109ce2e9e49964b27d&amp;imgtype=0&amp;src=http%3A%2F%2Fimg4q.duitang.com%2Fuploads%2Fitem%2F201504%2F07%2F20150407H5159_scUfF.jpeg"</span>).into(miv);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里要在AndroidManifest.xml中打开网络权限</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 网络请求权限开启 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>效果图:</p><p><img src="https://pic.yupoo.com/zly1024/a4701c78/66bbff46.jpg" alt="imageview"></p><h3 id="4webview"><a class="markdownIt-Anchor" href="#4webview"></a> 4.WebView</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ProgressBar</span> <span class="attr">---------</span>内嵌网页顶端进度条</span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/progressBar1"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">style</span>=<span class="string">"?android:attr/progressBarStyleHorizontal"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"3dip"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:progressDrawable</span>=<span class="string">"@drawable/pg"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:visibility</span>=<span class="string">"gone"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">WebView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/webview"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_below</span>=<span class="string">"@id/progressBar1"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebViewActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> WebView mWebView;</span><br><span class="line">    <span class="keyword">private</span> ProgressBar progressBar;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_web_view);</span><br><span class="line"></span><br><span class="line">        mWebView = findViewById(R.id.webview);</span><br><span class="line">        progressBar = findViewById(R.id.progressBar1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置加载网页</span></span><br><span class="line">        mWebView.getSettings().setJavaScriptEnabled(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        mWebView.setWebViewClient(<span class="keyword">new</span> MyWebViewClient());</span><br><span class="line">        mWebView.setWebChromeClient(<span class="keyword">new</span> MyWebChromeClient());</span><br><span class="line">        mWebView.loadUrl(<span class="string">"https://zly1024.github.io"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//内嵌网页,不跳转本机浏览器</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyWebViewClient</span> <span class="keyword">extends</span> <span class="title">WebViewClient</span></span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldOverrideUrlLoading</span><span class="params">(WebView view, WebResourceRequest request)</span> </span>&#123;</span><br><span class="line">            view.loadUrl(request.getUrl().toString());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">super</span>.shouldOverrideUrlLoading(view, request);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyWebChromeClient</span> <span class="keyword">extends</span> <span class="title">WebChromeClient</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgressChanged</span><span class="params">(WebView view, <span class="keyword">int</span> newProgress)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onProgressChanged(view, newProgress);</span><br><span class="line">            <span class="keyword">if</span>(newProgress==<span class="number">100</span>)&#123;</span><br><span class="line">                progressBar.setVisibility(View.GONE);<span class="comment">//加载完网页进度条消失</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                progressBar.setVisibility(View.VISIBLE);<span class="comment">//开始加载网页时显示进度条</span></span><br><span class="line">                progressBar.setProgress(newProgress);<span class="comment">//设置进度值</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//activity的头标题设置</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedTitle</span><span class="params">(WebView view, String title)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.onReceivedTitle(view, title);</span><br><span class="line">            setTitle(title);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onKeyDown</span><span class="params">(<span class="keyword">int</span> keyCode, KeyEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(keyCode==event.KEYCODE_BACK &amp;&amp; mWebView.canGoBack())&#123;</span><br><span class="line">            <span class="comment">//回退到上一级</span></span><br><span class="line">            mWebView.goBack();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onKeyDown(keyCode, event);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果图:</p><p><img src="https://pic.yupoo.com/zly1024/e9fd2156/ff531c15.jpg" alt="webview"></p><h3 id="5toast"><a class="markdownIt-Anchor" href="#5toast"></a> 5.Toast</h3><ul><li><p>默认底部</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Toast.makeText(RecycleViewActivity.<span class="keyword">this</span>, <span class="string">"click......"</span> + pos, Toast.LENGTH_SHORT).show();</span><br></pre></td></tr></table></figure></li><li><p>toast设置在屏幕中央</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Toast toast = Toast.makeText(getApplicationContext(), <span class="string">"请求繁忙"</span>, Toast.LENGTH_LONG);</span><br><span class="line">toast.setGravity(Gravity.CENTER, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">toast.show();</span><br></pre></td></tr></table></figure></li><li><p>toast设置布局填充自定义图片</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Toast toast_pic = Toast.makeText(getApplicationContext(), <span class="string">"请求繁忙"</span>, Toast.LENGTH_LONG);</span><br><span class="line">LayoutInflater layoutInflater = LayoutInflater.from(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">View view = layoutInflater.inflate(R.layout.toast_pic, <span class="keyword">null</span>);</span><br><span class="line">ImageView imageView = view.findViewById(R.id.iv_toast);</span><br><span class="line">TextView textView = view.findViewById(R.id.tv_toast);</span><br><span class="line">imageView.setImageResource(R.drawable.toast_jinggao);</span><br><span class="line">textView.setText(<span class="string">"请求繁忙"</span>);</span><br><span class="line">toast_pic.setView(view);</span><br><span class="line">toast_pic.setDuration(Toast.LENGTH_LONG);</span><br><span class="line">toast_pic.setGravity(Gravity.CENTER, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">toast_pic.show();</span><br></pre></td></tr></table></figure><p>布局文件:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/iv_toast"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"50dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"50dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:scaleType</span>=<span class="string">"fitCenter"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/tv_toast"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">"按出火来了.."</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">"18sp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">"@color/colorBlack"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>效果图:</p></li></ul><p><img src="https://pic.yupoo.com/zly1024/d3ab1c6f/091734a3.jpg" alt="自定义toast"></p><h3 id="6alertdialog"><a class="markdownIt-Anchor" href="#6alertdialog"></a> 6.AlertDialog</h3><h4 id="1普通弹出框"><a class="markdownIt-Anchor" href="#1普通弹出框"></a> 1.普通弹出框</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> String[] sexArr = <span class="keyword">new</span> String[]&#123;<span class="string">"男"</span>, <span class="string">"女"</span>&#125;;</span><br><span class="line">AlertDialog.Builder builder = <span class="keyword">new</span> AlertDialog.Builder(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">builder.setTitle(<span class="string">"请选择性别"</span>).setSingleChoiceItems(sexArr, <span class="number">0</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, sexArr[which], Toast.LENGTH_SHORT).show();</span><br><span class="line">        <span class="comment">//点击后弹出框消失</span></span><br><span class="line">        dialog.dismiss();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//点击别处不让弹出框消失</span></span><br><span class="line">&#125;).setCancelable(<span class="keyword">false</span>).show();</span><br></pre></td></tr></table></figure><p>效果图:</p><p><img src="https://pic.yupoo.com/zly1024/943304d9/161a97cf.jpg" alt="alertdialog"></p><h4 id="2布局填充弹出框"><a class="markdownIt-Anchor" href="#2布局填充弹出框"></a> 2.布局填充弹出框</h4><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">AlertDialog.Builder builder_diy = <span class="keyword">new</span> AlertDialog.Builder(MainActivity.<span class="keyword">this</span>);</span><br><span class="line"><span class="keyword">final</span> View viewdiy = LayoutInflater.from(MainActivity.<span class="keyword">this</span>).inflate(R.layout.alert_dialog, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">final</span> EditText username = viewdiy.findViewById(R.id.username);</span><br><span class="line"><span class="keyword">final</span> EditText password = viewdiy.findViewById(R.id.password);</span><br><span class="line">builder_diy.setTitle(<span class="string">"请先登录"</span>).setView(viewdiy).setPositiveButton(<span class="string">"登录"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ((username != <span class="keyword">null</span> &amp;&amp; !<span class="string">""</span>.equals(username.getText().toString())) &amp;&amp; (password != <span class="keyword">null</span> &amp;&amp; !<span class="string">""</span>.equals(password.getText().toString()))) &#123;</span><br><span class="line">            Toast.makeText(getApplicationContext(), <span class="string">"登陆成功"</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">            dialog.dismiss();</span><br><span class="line">            Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, WebViewActivity.class);</span><br><span class="line">            startActivity(intent);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Toast.makeText(getApplicationContext(), <span class="string">"登陆失败"</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).setCancelable(<span class="keyword">false</span>).show();</span><br></pre></td></tr></table></figure><p>alert_dialog.xml</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/username"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:hint</span>=<span class="string">"请输入姓名"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:maxLines</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/password"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:hint</span>=<span class="string">"请输入密码"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:inputType</span>=<span class="string">"textPassword"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:maxLines</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>效果图:</p><p><img src="https://pic.yupoo.com/zly1024/31534eb2/4e05fe20.jpg" alt="自定义弹出框"></p><h3 id="7自定义dialog"><a class="markdownIt-Anchor" href="#7自定义dialog"></a> 7.自定义Dialog</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/cd_title"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">"提示"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">"@color/colorBlack"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">"25sp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/cd_message"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">"确认删除内容?"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">"@color/colorBlack"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:textSize</span>=<span class="string">"25sp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginBottom</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"0.5dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@color/colorGray"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"50dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/cd_cancel"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"取消"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"25dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@color/colorGray"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0.5dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@color/colorGray"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/cd_confirm"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"确认"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"25dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@color/colorGray"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textStyle</span>=<span class="string">"bold"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//自定义dialog类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomDialog</span> <span class="keyword">extends</span> <span class="title">Dialog</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//组件</span></span><br><span class="line">    <span class="keyword">private</span> TextView mTvTitle, mTvMessage, mTvCancel, mTvConfirm;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//组件值</span></span><br><span class="line">    <span class="keyword">private</span> String title, message, cancel, confirm;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//监听类</span></span><br><span class="line">    <span class="keyword">private</span> IOnCancelListener cancelListener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IOnConfirmListener confirmListener;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CustomDialog <span class="title">setTitle</span><span class="params">(String title)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.title = title;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CustomDialog <span class="title">setMessage</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.message = message;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CustomDialog <span class="title">setCancel</span><span class="params">(String cancel, IOnCancelListener listener)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.cancel = cancel;</span><br><span class="line">        <span class="keyword">this</span>.cancelListener = listener;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CustomDialog <span class="title">setConfirm</span><span class="params">(String confirm, IOnConfirmListener listener)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.confirm = confirm;</span><br><span class="line">        <span class="keyword">this</span>.confirmListener = listener;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomDialog</span><span class="params">(@NonNull Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CustomDialog</span><span class="params">(@NonNull Context context, <span class="keyword">int</span> themeResId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, themeResId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.custom_dialog);</span><br><span class="line">        mTvTitle = findViewById(R.id.cd_title);</span><br><span class="line">        mTvMessage = findViewById(R.id.cd_message);</span><br><span class="line">        mTvCancel = findViewById(R.id.cd_cancel);</span><br><span class="line">        mTvConfirm = findViewById(R.id.cd_confirm);</span><br><span class="line">        </span><br><span class="line">        WindowManager m = getWindow().getWindowManager();</span><br><span class="line">        Display d = m.getDefaultDisplay();</span><br><span class="line">        WindowManager.LayoutParams p = getWindow().getAttributes();</span><br><span class="line">        p.width = (<span class="keyword">int</span>) (d.getWidth()*<span class="number">0.8</span>); <span class="comment">//设置dialog的宽度为当前手机屏幕的宽度</span></span><br><span class="line">        getWindow().setAttributes(p);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(title)) &#123;</span><br><span class="line">            mTvTitle.setText(title);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(message)) &#123;</span><br><span class="line">            mTvMessage.setText(message);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(cancel)) &#123;</span><br><span class="line">            mTvCancel.setText(cancel);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(confirm)) &#123;</span><br><span class="line">            mTvConfirm.setText(confirm);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//当前类已实现onclicklistener</span></span><br><span class="line">        mTvCancel.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        mTvConfirm.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId())&#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.cd_cancel:</span><br><span class="line">                <span class="keyword">if</span>(cancelListener!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                    cancelListener.cancel(<span class="keyword">this</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.cd_confirm:</span><br><span class="line">                <span class="keyword">if</span>(confirmListener!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                    confirmListener.confirm(<span class="keyword">this</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//cancel回调监听</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IOnCancelListener</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">cancel</span><span class="params">(CustomDialog dialog)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//confirm回调监听</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IOnConfirmListener</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">confirm</span><span class="params">(CustomDialog dialog)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>activity中:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">CustomDialog customDialog = <span class="keyword">new</span> CustomDialog(MainActivity.<span class="keyword">this</span>);</span><br><span class="line">customDialog.setTitle(<span class="string">"提示"</span>).setMessage(<span class="string">"是否删除浏览记录?"</span>).setCancel(<span class="string">"取消"</span>, <span class="keyword">new</span> CustomDialog.IOnCancelListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cancel</span><span class="params">(CustomDialog dialog)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"已取消"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        dialog.dismiss();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).setConfirm(<span class="string">"确认"</span>, <span class="keyword">new</span> CustomDialog.IOnConfirmListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">confirm</span><span class="params">(CustomDialog dialog)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"删除成功"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">        dialog.dismiss();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">customDialog.setCancelable(<span class="keyword">false</span>);</span><br><span class="line">customDialog.show();</span><br></pre></td></tr></table></figure><p>效果图:</p><p><img src="https://pic.yupoo.com/zly1024/905b9d3e/0f6cc03c.jpg" alt="自定义dialog"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;android开发基本组件总结&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#android开发基本组件总结&quot;&gt;&lt;/a&gt; Android开发基本组件总结&lt;/h1&gt;
&lt;h3 id=&quot;1textview&quot;&gt;&lt;a class=&quot;markdow
      
    
    </summary>
    
      <category term="技术" scheme="httpS://zly1024.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Android开发" scheme="httpS://zly1024.github.io/tags/Android%E5%BC%80%E5%8F%91/"/>
    
      <category term="java" scheme="httpS://zly1024.github.io/tags/java/"/>
    
      <category term="学习" scheme="httpS://zly1024.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Android开发学习总结(二)</title>
    <link href="httpS://zly1024.github.io/2019/07/30/Android%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%E4%BA%8C/"/>
    <id>httpS://zly1024.github.io/2019/07/30/Android开发学习总结-二/</id>
    <published>2019-07-30T01:40:57.000Z</published>
    <updated>2019-07-30T08:08:19.553Z</updated>
    
    <content type="html"><![CDATA[<h1 id="activity布局和视图总结"><a class="markdownIt-Anchor" href="#activity布局和视图总结"></a> Activity布局和视图总结</h1><h3 id="1-线性布局"><a class="markdownIt-Anchor" href="#1-线性布局"></a> 1. 线性布局</h3><p>​线性布局使用<code>&lt;LinearLayout&gt;</code>标签,<code>LinearLayout</code> 是一个视图组，它所有的子视图都在一个方向对齐，水平或者垂直。你可以指定布局的方向通过 <code>android:orientation</code> 属性。</p><p>​<code>LinearLayout</code>的所有子视图排列都是一个靠着另一个，因此垂直列表每行仅仅有一个子视图，不管有多宽。水平列表只能有一行的高度（最高子视图的高度加上边距距离）。<code>LinearLayout</code> 期望子视图之间都有<em>margin</em>，每个子视图都有<em>gravity</em>。</p><p>​线性布局也支持给个别的子视图设定权重，通过<code>android:layout_weight</code>属性</p><p>​示例:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"Hello World!"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"50sp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"Hello World!"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"50sp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"Hello World!"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"50sp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"Hello World!"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"50sp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"Hello World!"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"50sp"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>实现的效果为</p><p><img src="https://pic.yupoo.com/zly1024/ff3e07b8/6560c192.png" alt="QQ图片20190730095504"></p><p>###2.相对布局</p><p>​相对布局使用<code>&lt;RelativeLayout&gt;</code>,<code>RelativeLayout</code>是一个视图组，显示相对位置的子视图。每个视图的位置可以指定为相对于同级元素（例如，在另一个视图的左侧或下方）或相对于父<code>RelativeLayout</code>区域的位置（例如与中心的底部，左侧对齐）。</p><p>​ <code>RelativeLayout</code>是用于设计用户界面的非常强大的实用程序，因为它可以消除嵌套视图组并保持布局层次结构平整，从而提高性能。如果您发现自己使用了多个嵌套<code>LinearLayout</code>组，则可以用一个替换它们<code>RelativeLayout</code>。</p><p>一些常用的相对布局的属性:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">android:layout_centerHrizontal                    <span class="comment">//水平居中</span></span><br><span class="line"></span><br><span class="line">android:layout_centerVertical                     <span class="comment">//垂直居中</span></span><br><span class="line"></span><br><span class="line">android:layout_centerInparent                    <span class="comment">//相对于父元素完全居中</span></span><br><span class="line"></span><br><span class="line">android:layout_alignParentBottom                 <span class="comment">//贴紧父元素的下边缘</span></span><br><span class="line"></span><br><span class="line">android:layout_alignParentLeft                    <span class="comment">//贴紧父元素的左边缘</span></span><br><span class="line"></span><br><span class="line">android:layout_alignParentRight                   <span class="comment">//贴紧父元素的右边缘</span></span><br><span class="line"></span><br><span class="line">android:layout_alignParentTop                    <span class="comment">//贴紧父元素的上边缘</span></span><br><span class="line"></span><br><span class="line">android:layout_alignWithParentIfMissing           <span class="comment">//如果对应的兄弟元素找不到的话就以父元素做参照物</span></span><br><span class="line"></span><br><span class="line">android:layout_centerHorizontal=<span class="string">"true"</span>            <span class="comment">//水平居中</span></span><br><span class="line">android:layout_centerVertical=<span class="string">"true"</span>              <span class="comment">//竖直居中</span></span><br><span class="line">android:layout_centerInParent=<span class="string">"true"</span>              <span class="comment">//相对父控件居中</span></span><br><span class="line">    </span><br><span class="line">android:layout_below                          <span class="comment">//在某元素的下方</span></span><br><span class="line"></span><br><span class="line">android:layout_above                          <span class="comment">//在某元素的的上方</span></span><br><span class="line"></span><br><span class="line">android:layout_toLeftOf                        <span class="comment">//在某元素的左边</span></span><br><span class="line"></span><br><span class="line">android:layout_toRightOf                       <span class="comment">//在某元素的右边</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">android:layout_alignTop                <span class="comment">//本元素的上边缘和某元素的的上边缘对齐</span></span><br><span class="line"></span><br><span class="line">android:layout_alignLeft                <span class="comment">//本元素的左边缘和某元素的的左边缘对齐</span></span><br><span class="line"></span><br><span class="line">android:layout_alignBottom             <span class="comment">//本元素的下边缘和某元素的的下边缘对齐</span></span><br><span class="line"></span><br><span class="line">android:layout_alignRight               <span class="comment">//本元素的右边缘和某元素的的右边缘对齐</span></span><br></pre></td></tr></table></figure><p>示例:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/tx_1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"Hello World!"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"50sp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/tx_2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"Hello World!"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"50sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">"@+id/tx_1"</span>/&gt;</span> <span class="comment">&lt;!-- 用android:layout_below属性指定该控件位于哪个位置--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/tx_3"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"Hello World!"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"50sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">"@+id/tx_2"</span>/&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-列表视图listview"><a class="markdownIt-Anchor" href="#3-列表视图listview"></a> 3. 列表视图ListView</h3><p>​<code>ListView</code>是一个显示可滚动项列表的视图组。列表项将自动插入到列表中，使用<code>Adapter</code>从数据库或数据库查询等源中提取内容，并将每个项目结果转换为放入列表中的视图。</p><p>​示例:</p><p>xml中</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--activity_list_view.xml--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:padding</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/alv_lv"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:listSelector</span>=<span class="string">"@drawable/list_item"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--list_item.xml--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--设置press特效--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_pressed</span>=<span class="string">"true"</span> <span class="attr">android:drawable</span>=<span class="string">"@color/colorGray"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--设置选中特效--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:state_selected</span>=<span class="string">"true"</span> <span class="attr">android:drawable</span>=<span class="string">"@color/colorGray"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--未选中,默认特效为透明--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">"@color/colorTransparent"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--layout_list_item.xml--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:padding</span>=<span class="string">"15dp"</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/lliiv"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"100dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"100dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:scaleType</span>=<span class="string">"centerCrop"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"#000"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingLeft</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">        &gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/llitx_1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"hello"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"20sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"@color/colorBlack"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/llitx_2"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"2019-7-25"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"18sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"@color/colorGray"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/llitx_3"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">"今天一天困的要死,昨晚只睡了两小时"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:maxLines</span>=<span class="string">"1"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:ellipsize</span>=<span class="string">"end"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"18sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textColor</span>=<span class="string">"@color/colorGray"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">            /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>activity:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zly.study.listview;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.ListView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zly.study.R;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListViewActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ListView listView;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="comment">//设置视图</span></span><br><span class="line">        setContentView(R.layout.activity_list_view);</span><br><span class="line">        <span class="comment">//实例化控件</span></span><br><span class="line">        listView = findViewById(R.id.alv_lv);</span><br><span class="line">        <span class="comment">//设置adapter视图适配器</span></span><br><span class="line">        listView.setAdapter(<span class="keyword">new</span> MyListAdapter(ListViewActivity.<span class="keyword">this</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------------------------</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 列表视图适配器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyListAdapter</span> <span class="keyword">extends</span> <span class="title">BaseAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="keyword">private</span> LayoutInflater mLayoutInflater;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造方法传入参数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyListAdapter</span><span class="params">(Context context)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mContext = context;</span><br><span class="line">        mLayoutInflater = LayoutInflater.from(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getItemId</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</span><br><span class="line">        ViewHolder holder = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(convertView==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">//设置每个列表项显示的视图效果</span></span><br><span class="line">            <span class="comment">//LayoutInflater为布局填充器</span></span><br><span class="line">            convertView = mLayoutInflater.inflate(R.layout.layout_list_item,<span class="keyword">null</span>);</span><br><span class="line">            holder = <span class="keyword">new</span> ViewHolder();</span><br><span class="line">            holder.imageView = convertView.findViewById(R.id.lliiv);</span><br><span class="line">            holder.tvTitle = convertView.findViewById(R.id.llitx_1);</span><br><span class="line">            holder.tvTime = convertView.findViewById(R.id.llitx_2);</span><br><span class="line">            holder.tvContent = convertView.findViewById(R.id.llitx_3);</span><br><span class="line">            convertView.setTag(holder);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            holder = (ViewHolder) convertView.getTag();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//给控件赋值(暂时写死)</span></span><br><span class="line">        holder.tvTitle.setText(<span class="string">"张扣扣被执行死刑"</span>);</span><br><span class="line">        holder.tvTime.setText(<span class="string">"2019-7-25"</span>);</span><br><span class="line">        holder.tvContent.setText(<span class="string">"现在押(编者注:7月17日已被执行死刑)。陕西省汉中市中级人民法院审理汉中市人民检察院指控被告人张扣扣犯故意杀人罪、故意毁坏财物罪一案,于2019年1月8日以(..."</span>);</span><br><span class="line">        Glide.with(mContext).load(<span class="string">"https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1564049123942&amp;di=ac02f5be1ae75a334433933ce78bb3d9&amp;imgtype=0&amp;src=http%3A%2F%2Fpics7.baidu.com%2Ffeed%2F63d0f703918fa0ecb45c6a0535347ceb3c6ddb43.jpeg%3Ftoken%3D7b4af0715ca06cdc29f88a9c569e41e0%26s%3D2A324A868462B35D5C4041120300C090"</span>).into(holder.imageView);</span><br><span class="line">        <span class="keyword">return</span> convertView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//子控件存储</span></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> ImageView imageView;</span><br><span class="line">        <span class="keyword">public</span> TextView tvTitle,tvTime,tvContent;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果图:</p><p><img src="https://pic.yupoo.com/zly1024/72c74284/4f4f3f4a.jpg" alt="listView图"></p><h3 id="4网格视图gridview"><a class="markdownIt-Anchor" href="#4网格视图gridview"></a> 4.网格视图GridView</h3><p>​网格视图(GridView)是按照行、列分布式的方式来显示多个组件，通常用于显示图片或是图标等。在使用网格视图时，首先要在屏幕上添加<code>GridView</code>组件.</p><p>GridView组件支持的XML属性如表所示：</p><ul><li><p>1.android:numColumns=”4”   //GridView的列数设置为4列</p></li><li><p>2.android:columnWidth=”90dp &quot;       //每列的宽度，也就是Item的宽度</p></li><li><p>3.android:stretchMode=”columnWidth&quot;//缩放与列宽大小同步</p></li><li><p>4.android:verticalSpacing=”10dp”          //两行之间的边距</p></li><li><p>5.android:horizontalSpacing=”10dp”      //两列之间的边距</p></li><li><p>6.android:cacheColorHint=&quot;#00000000&quot; //去除拖动时默认的黑色背景</p></li><li><p>7.android:listSelector=&quot;#00000000&quot;        //去除选中时的黄色底色</p></li><li><p>8.android:scrollbars=“none”                   //隐藏GridView的滚动条</p></li><li><p>9.android:fadeScrollbars=“true”             //设置为true就可以实现滚动条的自动隐藏和显示</p></li><li><p>10.android:fastScrollEnabled=“true”      //GridView出现快速滚动的按钮(至少滚动4页才会显示)</p></li><li><p>11.android:fadingEdge=“none”                //GridView衰落(褪去)边缘颜色为空，缺省值是vertical。(可以理解为上下边缘的提示色)</p></li><li><p>12.android:fadingEdgeLength=“10dip”   //定义的衰落(褪去)边缘的长度</p></li><li><p>13.android:stackFromBottom=“true”       //设置为true时，你做好的列表就会显示你列表的最下面</p></li><li><p>14.android:transcriptMode=“alwaysScroll” //当你动态添加数据时，列表将自动往下滚动最新的条目可以自动滚动到可视范围内</p></li><li><p>15.android:drawSelectorOnTop=“false”  //点击某条记录不放，颜色会在记录的后面成为背景色,内容的文字可见</p><p>​</p></li></ul><p>网格视图实现方式与列表视图实现方式类似</p><p>xml中:</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"fill_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/layout"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">GridView</span> <span class="attr">android:id</span>=<span class="string">"@+id/gridView1"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:stretchMode</span>=<span class="string">"columnWidth"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:numColumns</span>=<span class="string">"4"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--//=========================================--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/image"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingLeft</span>=<span class="string">"10px"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:scaleType</span>=<span class="string">"fitCenter"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:padding</span>=<span class="string">"5px"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/title"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Activity中:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span></span>&#123;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">setContentView(R.layout.main);</span><br><span class="line"></span><br><span class="line">GridView gridView=(GridView)findViewById(R.id.gridView1);<span class="comment">//获取GridView组件</span></span><br><span class="line">        <span class="comment">//drawable包下存放的图片</span></span><br><span class="line"><span class="keyword">int</span> [] imageId=<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;R.drawable.img01,R.drawable.img02,R.drawable.img03,R.drawable.img04,</span><br><span class="line">R.drawable.img05,R.drawable.img06,R.drawable.img07,R.drawable.img08,</span><br><span class="line">R.drawable.img_top,R.drawable.ic_launcher,R.drawable.in,R.drawable.stop,&#125;;<span class="comment">//定义并初始化保存图片id的数组</span></span><br><span class="line">String[] title=<span class="keyword">new</span> String[]&#123;<span class="string">"图片一"</span>,<span class="string">"超级图片"</span>,<span class="string">"魅力图片"</span>,<span class="string">"碉堡图片"</span>,<span class="string">"搞笑图片"</span>,<span class="string">"动画图片"</span>,<span class="string">"开心图片"</span>,<span class="string">"难过图片"</span>,<span class="string">"诡异图片"</span>,</span><br><span class="line"><span class="string">"心灵鸡汤"</span>,<span class="string">"虎虎生威"</span>,<span class="string">"洋洋得意"</span>&#125;;<span class="comment">//定义并初始化保存说明文字的数组</span></span><br><span class="line">List&lt;Map&lt;String,Object&gt;&gt; listitems=<span class="keyword">new</span> ArrayList&lt;Map&lt;String,Object&gt;&gt;();<span class="comment">//创建一个list集合</span></span><br><span class="line"><span class="comment">//通过for循环将图片和列表项文字放到Map中，并添加到List集合中</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;imageId.length;i++)&#123;</span><br><span class="line">Map&lt;String,Object&gt; map=<span class="keyword">new</span> HashMap&lt;String,Object&gt;();</span><br><span class="line">map.put(<span class="string">"image"</span>, imageId[i]);</span><br><span class="line">map.put(<span class="string">"title"</span>,title[i]);</span><br><span class="line">listitems.add(map);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//创建SimpleAdapter</span></span><br><span class="line">SimpleAdapter adapter=<span class="keyword">new</span> SimpleAdapter(<span class="keyword">this</span>,</span><br><span class="line">listitems,R.layout.item,<span class="keyword">new</span> String[]&#123;<span class="string">"title"</span>,<span class="string">"image"</span>&#125;,<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;R.id.title,R.id.image&#125;);</span><br><span class="line">gridView.setAdapter(adapter);<span class="comment">//将适配器与gridView关联</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果图:</p><p><img src="https://img-blog.csdn.net/20150408160934567?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvYWNtbWFu/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/Center" alt="这个图片去下面地址里上看,无法外链"></p><p>网格视图代码转载自<strong><a href="http://blog.csdn.net/acmman/article/details/44942337" target="_blank" rel="noopener">http://blog.csdn.net/acmman/article/details/44942337</a></strong></p><h3 id="5-recyclerview"><a class="markdownIt-Anchor" href="#5-recyclerview"></a> 5. RecyclerView</h3><p>​<code>RecyclerView</code>是Android 5.0推出的，是support-v7包中的新组件,它被用来代替<code>ListView</code>和<code>GridView</code>，并且能够实现瀑布流的布局，更加高级并且更加灵活，提供更为高效的回收复用机制，同时实现管理与视图的解耦合。</p><p>​实现<code>RecyclerView</code>需要先添加依赖com.android.support.recyclerview-v7:版本号 , 版本号要跟sdk版本一致.</p><p>示例:</p><p>xml中</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--activity_recycle_view.xml---&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/rv_1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@color/colorGray"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--recycle_linear_list_item.xml--&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"#ffffff"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/linear_item"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"50dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"天哥在奔跑"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@color/colorAccent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"25sp"</span></span></span><br><span class="line"><span class="tag">        /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>activity中:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RecycleViewActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RecyclerView rv_1;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; list = Arrays.asList(<span class="string">"天哥在奔跑_1"</span>,<span class="string">"天哥在奔跑_2"</span>,<span class="string">"天哥在奔跑_3"</span>,<span class="string">"天哥在奔跑_4"</span>,<span class="string">"天哥在奔跑_5"</span>,<span class="string">"天哥在奔跑_1"</span>,<span class="string">"天哥在奔跑_2"</span>,<span class="string">"天哥在奔跑_3"</span>,<span class="string">"天哥在奔跑_4"</span>,<span class="string">"天哥在奔跑_5"</span>,<span class="string">"天哥在奔跑_1"</span>,<span class="string">"天哥在奔跑_2"</span>,<span class="string">"天哥在奔跑_3"</span>,<span class="string">"天哥在奔跑_4"</span>,<span class="string">"天哥在奔跑_5"</span>,<span class="string">"天哥在奔跑_1"</span>,<span class="string">"天哥在奔跑_2"</span>,<span class="string">"天哥在奔跑_3"</span>,<span class="string">"天哥在奔跑_4"</span>,<span class="string">"天哥在奔跑_5"</span>,<span class="string">"天哥在奔跑_1"</span>,<span class="string">"天哥在奔跑_2"</span>,<span class="string">"天哥在奔跑_3"</span>,<span class="string">"天哥在奔跑_4"</span>,<span class="string">"天哥在奔跑_5"</span>,<span class="string">"天哥在奔跑_1"</span>,<span class="string">"天哥在奔跑_2"</span>,<span class="string">"天哥在奔跑_3"</span>,<span class="string">"天哥在奔跑_4"</span>,<span class="string">"天哥在奔跑_5"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_recycle_view);</span><br><span class="line">        rv_1 = findViewById(R.id.rv_1);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置布局管理器</span></span><br><span class="line">        rv_1.setLayoutManager(<span class="keyword">new</span> LinearLayoutManager(RecycleViewActivity.<span class="keyword">this</span>));</span><br><span class="line">        <span class="comment">//设置下划线.间隔线什么玩意等等</span></span><br><span class="line">        rv_1.addItemDecoration(<span class="keyword">new</span> MyDecoration());</span><br><span class="line">        <span class="comment">//设置adapter</span></span><br><span class="line">        rv_1.setAdapter(<span class="keyword">new</span> LinearAdapter(RecycleViewActivity.<span class="keyword">this</span>, list, <span class="keyword">new</span> LinearAdapter.OnItemClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(<span class="keyword">int</span> pos)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(RecycleViewActivity.<span class="keyword">this</span>, <span class="string">"click......"</span> + pos, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyDecoration</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ItemDecoration</span></span>&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getItemOffsets</span><span class="params">(@NonNull Rect outRect, @NonNull View view, @NonNull RecyclerView parent, @NonNull RecyclerView.State state)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.getItemOffsets(outRect, view, parent, state);</span><br><span class="line">            outRect.set(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,getResources().getDimensionPixelOffset(R.dimen.underline_h));<span class="comment">//列表加分割线</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//================================================================================</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinearAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">LinearAdapter</span>.<span class="title">LinearViewHolder</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//传入activity</span></span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="comment">//声明监听器</span></span><br><span class="line">    <span class="keyword">private</span> OnItemClickListener onItemClickListener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; list;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LinearAdapter</span><span class="params">(Context mContext, List&lt;String&gt; list, OnItemClickListener onItemClickListener)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mContext = mContext;</span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">        <span class="keyword">this</span>.onItemClickListener = onItemClickListener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> LinearAdapter.<span class="function">LinearViewHolder <span class="title">onCreateViewHolder</span><span class="params">(@NonNull ViewGroup viewGroup, <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//将item传入holder</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LinearViewHolder(LayoutInflater.from(mContext).inflate(R.layout.recycle_linear_list_item, viewGroup, <span class="keyword">false</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//组件列表项的数据绑定事件处理</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(@NonNull LinearViewHolder viewHolder, <span class="keyword">final</span> <span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//设置内容</span></span><br><span class="line">            viewHolder.mTextView.setText(list.get(i));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            viewHolder.mTextView.setText(<span class="string">"快下班了!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//view的监听器实现使用自定义的onItemClickListener,而这个接口实现则由activity传递进来,实现回调</span></span><br><span class="line">        viewHolder.itemView.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// Toast.makeText(mContext, "click......" + i, Toast.LENGTH_SHORT).show();</span></span><br><span class="line">                onItemClickListener.onClick(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.size();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">LinearViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//声明布局的控件</span></span><br><span class="line">        <span class="keyword">private</span> TextView mTextView;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">LinearViewHolder</span><span class="params">(@NonNull View itemView)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            mTextView = itemView.findViewById(R.id.linear_item);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置监听回调接口</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnItemClickListener</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(<span class="keyword">int</span> pos)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>效果图:</p><p><img src="https://pic.yupoo.com/zly1024/c01e6581/ffb82b15.jpg" alt="recyclerView"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;activity布局和视图总结&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#activity布局和视图总结&quot;&gt;&lt;/a&gt; Activity布局和视图总结&lt;/h1&gt;
&lt;h3 id=&quot;1-线性布局&quot;&gt;&lt;a class=&quot;markdownIt
      
    
    </summary>
    
      <category term="技术" scheme="httpS://zly1024.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Android开发" scheme="httpS://zly1024.github.io/tags/Android%E5%BC%80%E5%8F%91/"/>
    
      <category term="java" scheme="httpS://zly1024.github.io/tags/java/"/>
    
      <category term="学习" scheme="httpS://zly1024.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Android开发学习总结(一)</title>
    <link href="httpS://zly1024.github.io/2019/07/29/Android%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93-%E4%B8%80/"/>
    <id>httpS://zly1024.github.io/2019/07/29/Android开发学习总结-一/</id>
    <published>2019-07-29T09:32:54.000Z</published>
    <updated>2019-07-30T08:07:34.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="android开发概述以及开发工具"><a class="markdownIt-Anchor" href="#android开发概述以及开发工具"></a> Android开发概述以及开发工具</h1><h3 id="android开发概述"><a class="markdownIt-Anchor" href="#android开发概述"></a> Android开发概述</h3><ul><li><p><code>Android</code>是Google开发的操作系统</p></li><li><p><code>Android</code>是一种基于<a href="https://baike.baidu.com/item/Linux/27050" target="_blank" rel="noopener">Linux</a>的自由及<a href="https://baike.baidu.com/item/%E5%BC%80%E6%94%BE%E6%BA%90%E4%BB%A3%E7%A0%81/114160" target="_blank" rel="noopener">开放源代码</a>的操作系统，Android 分为四个层，从高层到低层分别是应用程 序层、应用程序框架层、系统运行库层和 Linux 内核层。</p></li><li><p><code>Android</code>开发是移动应用开发的表现形式之一</p><p>其它表现形式:<code>iOS</code>,<code>H5App</code>,<code>Native+H5</code>,<code>RN</code>,<code>ionic</code>等.</p></li><li><p>Android四大基本组件:<code>Activity</code>、<code>Service</code>、<code>Broadcast Receivet</code>、<code>Content Provider</code>.</p></li><li><p>特点:系统开源,跨平台,有丰富的应用.</p></li></ul><h3 id="android开发环境"><a class="markdownIt-Anchor" href="#android开发环境"></a> Android开发环境</h3><p>​Android基于<code>java</code>的,早期使用eclipse作为IDE,现在比较流行的是<code>Android Studio</code>.它基于<code>IntelliJ IDEA</code>类似Echpse ADT，<code>Android Studio</code>提供了集成的 Android开发工具。相比较以前<code>Eclipse</code>，它自己内部就集成了SDK等，方便开发。通常情况下，在正常安装JDK后，继续安装 Android Studio后，便可直接使用了。</p><h3 id="第一个android应用"><a class="markdownIt-Anchor" href="#第一个android应用"></a> 第一个Android应用</h3><p>​使用Android Studio创建一个安卓应用,我们可以在app/src/main/java/自定义包名/ 下看到<code>MainActivity</code>,这是默认的Activity主入口,直接启动项目就可以在虚拟机环境下看到默认的helloworld页面了.</p><p>新建一个Activity步骤:</p><ul><li>新建一个java文件,继承于<code>AppCompatActivity</code>类并重写<code>onCreat()</code>方法,设置一个视图<code>View</code>.</li><li>在<code>AndroidManifest.xml</code>文件中注册新建的activity实体.</li><li>在res/layout包下创建一个xml视图文件,用于展示视图.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;android开发概述以及开发工具&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#android开发概述以及开发工具&quot;&gt;&lt;/a&gt; Android开发概述以及开发工具&lt;/h1&gt;
&lt;h3 id=&quot;android开发概述&quot;&gt;&lt;a class=
      
    
    </summary>
    
      <category term="技术" scheme="httpS://zly1024.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Android开发" scheme="httpS://zly1024.github.io/tags/Android%E5%BC%80%E5%8F%91/"/>
    
      <category term="java" scheme="httpS://zly1024.github.io/tags/java/"/>
    
      <category term="学习" scheme="httpS://zly1024.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>HEXO 新手搭建教程</title>
    <link href="httpS://zly1024.github.io/2019/07/23/HEXO-%E6%96%B0%E6%89%8B%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
    <id>httpS://zly1024.github.io/2019/07/23/HEXO-新手搭建教程/</id>
    <published>2019-07-23T09:10:11.000Z</published>
    <updated>2019-07-23T10:08:18.843Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo-新手指南"><a class="markdownIt-Anchor" href="#hexo-新手指南"></a> HEXO 新手指南</h1><h3 id="1简介"><a class="markdownIt-Anchor" href="#1简介"></a> 1.简介</h3><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo官网</a>进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><p>视频观看地址:<a href="https://www.bilibili.com/video/av44544186/?spm_id_from=333.788.videocard.15" target="_blank" rel="noopener">https://www.bilibili.com/video/av44544186/?spm_id_from=333.788.videocard.15</a></p><h3 id="2安装必要的软件"><a class="markdownIt-Anchor" href="#2安装必要的软件"></a> 2.安装必要的软件</h3><ul><li><p>进入Node.js官网安装nodeJs,安装完毕后命令行输入node -v 显示版本号,输入 npm -v 显示版本号即安装成功</p></li><li><p>进入git官网安装git,具体百度</p></li><li><p>安装hexo, 在命令行中输入</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>命令行输入hexo -v 显示版本号即安装成功</p></li></ul><h3 id="3-搭建步骤"><a class="markdownIt-Anchor" href="#3-搭建步骤"></a> 3. 搭建步骤</h3><h4 id="1初始化项目"><a class="markdownIt-Anchor" href="#1初始化项目"></a> 1.初始化项目</h4><p>​在任意目录创建一个文件夹,此文件夹就是博客的工程目录了,比如我创建的路径为 E:/blob/,然后在cmd中进入工程文件目录,输入命令行</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>查看blog目录可以看到生成了很多文件,并且还生成了一个helloword文档,在source/_post目录下,然后输入</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>即可启动项目,浏览器输入localhost:4000即可看到最简单的模型</p><h4 id="2-更换blog主题"><a class="markdownIt-Anchor" href="#2-更换blog主题"></a> 2. 更换blog主题</h4><p>​在官网上找一个喜欢的主题或者使用视频里的yilia主题.</p><ul><li><p>在工程根目录使用git bash 克隆工程或者直接下载zip包</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br></pre></td></tr></table></figure></li><li><p>打开根目录的_config.yml文件,设置主题</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">Butterfly</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="3-部署项目到github上"><a class="markdownIt-Anchor" href="#3-部署项目到github上"></a> 3. 部署项目到github上</h4><ul><li><p>创建一个github账号:<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a></p></li><li><p>创建一个repo仓库</p><p>Repository name: <a href="http://xn--rprwbz35y.github.io" target="_blank" rel="noopener">账号名.github.io</a> (必须)</p></li><li><p>进入cmd 输入命令</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-deployer-git</span><br></pre></td></tr></table></figure></li><li><p>等待插件下载完成后修改_config.yml,设置仓库地址</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="attr">https://github.com/zly1024/zly1024.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li><li><p>部署工程到git</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>浏览器访问https://zly1024.github.io 即可看到博客页面(这里输入自己的项目名)</p></li></ul><h4 id="4-创建新博客"><a class="markdownIt-Anchor" href="#4-创建新博客"></a> 4. 创建新博客</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new "博客名"</span><br></pre></td></tr></table></figure><p>然后可以以写md文件的软件打开撰写.</p><p>重新部署到git</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;hexo-新手指南&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#hexo-新手指南&quot;&gt;&lt;/a&gt; HEXO 新手指南&lt;/h1&gt;
&lt;h3 id=&quot;1简介&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1简介&quot;&gt;
      
    
    </summary>
    
      <category term="技术" scheme="httpS://zly1024.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="hexo" scheme="httpS://zly1024.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>oauth框架搭建</title>
    <link href="httpS://zly1024.github.io/2019/07/22/oauth%E6%A1%86%E6%9E%B6%E6%90%AD%E5%BB%BA/"/>
    <id>httpS://zly1024.github.io/2019/07/22/oauth框架搭建/</id>
    <published>2019-07-22T09:16:25.789Z</published>
    <updated>2019-07-23T08:49:43.952Z</updated>
    
    <content type="html"><![CDATA[<h1 id="oauth2总结"><a class="markdownIt-Anchor" href="#oauth2总结"></a> oauth2总结</h1><h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><h4 id="1-什么是oauth"><a class="markdownIt-Anchor" href="#1-什么是oauth"></a> 1. 什么是oauth</h4><p>OAuth（开放授权）是一个开放标准，允许用户让第三方应用访问该用户在某一网站上存储的私密的资源（如照片，视频，联系人列表），而无需将用户名和密码提供给第三方应用。</p><h4 id="2-运行流程图"><a class="markdownIt-Anchor" href="#2-运行流程图"></a> 2. 运行流程图</h4><p><img src="https://pic.yupoo.com/zly1024/29f7bc05/24491604.jpg" alt="yunxingliucheng"></p><p>（A）用户打开客户端以后，客户端要求用户给予授权。</p><p>（B）用户同意给予客户端授权。</p><p>（C）客户端使用上一步获得的授权，向认证服务器申请令牌。</p><p>（D）认证服务器对客户端进行认证以后，确认无误，同意发放令牌。</p><p>（E）客户端使用令牌，向资源服务器申请获取资源。</p><p>（F）资源服务器确认令牌无误，同意向客户端开放资源。</p><h4 id="3-四种授权模式"><a class="markdownIt-Anchor" href="#3-四种授权模式"></a> 3. 四种授权模式</h4><h5 id="1-授权码模式"><a class="markdownIt-Anchor" href="#1-授权码模式"></a> 1. 授权码模式</h5><p>授权码模式是四种模式中最繁琐也是最安全的一种模式。</p><p>client向资源服务器请求资源，被重定向到授权服务器（AuthorizationServer）</p><p>浏览器向资源拥有者索要授权，之后将用户授权发送给授权服务器</p><p>授权服务器将授权码（AuthorizationCode）转经浏览器发送给client</p><p>client拿着授权码向授权服务器索要访问令牌</p><p>授权服务器返回Access     Token和Refresh Token给cilent</p><p>这种模式是四种模式中最安全的一种模式。一般用于client是Web服务器端应用或第三方的原生App调用资源服务的时候。因为在这种模式中AccessToken不会经过浏览器或移动端的App，而是直接从服务端去交换，这样就最大限度的减小了AccessToken泄漏的风险。</p><p>1.获取授权码请求uri：/oauth/authorize</p><p>参数：</p><ul><li><p>client_id：客户端id。</p></li><li><p>response_type：授权类型，此值固定为“code”。</p></li><li><p>redirect_uri：成功授权后的回调地址</p></li></ul><p>2.获取token请求uri：/oauth/token</p><p>参数:</p><ul><li>client_id：客户端id。</li><li>client_secret：客户端密钥</li><li>grant_type：授权类型，固定为authorization_code</li><li>code：授权码</li><li>redirect_uri：重定向地址</li></ul><h5 id="2-密码模式"><a class="markdownIt-Anchor" href="#2-密码模式"></a> 2. 密码模式</h5><p>用户将认证密码发送给client</p><p>client拿着用户的密码向授权服务器请求Access Token</p><p>授权服务器将Access Token和Refresh Token发送给client</p><p>这种模式十分简单，但是却意味着直接将用户敏感信息泄漏给了client，因此这就说明这种模式只能用于client是我们自己开发的情况下。因此密码模式一般用于我们自己开发的，第一方原生App或第一方单页面应用。</p><p>1.获取token请求uri：/oauth/token</p><p>参数：</p><ul><li>username：用户名</li><li>password：用户密码</li><li>client_id：客户端id</li><li>client_secret：客户端密钥</li><li>grant_type：授权类型，固定为password</li></ul><h5 id="3-客户端模式"><a class="markdownIt-Anchor" href="#3-客户端模式"></a> 3. 客户端模式</h5><p>这是一种最简单的模式，只要client请求，我们就将AccessToken发送给它。</p><p>client向授权服务器发送自己的身份信息，并请求AccessToken</p><p>确认client信息无误后，将AccessToken发送给client</p><p>这种模式是最方便但最不安全的模式。因此这就要求我们对client完全的信任，而client本身也是安全的。因此这种模式一般用来提供给我们完全信任的服务器端服务。在这个过程中不需要用户的参与。</p><p>1.获取token请求uri：/oauth/token</p><p>参数：</p><ul><li>client_id：客户端id</li><li>client_secret：客户端密钥</li><li>grant_type：授权类型，固定为client_credentials</li></ul><h5 id="4-简化模式"><a class="markdownIt-Anchor" href="#4-简化模式"></a> 4. 简化模式</h5><p>简化模式相对于授权码模式省略了，提供授权码，然后通过服务端发送授权码换取AccessToken的过程。</p><p>client请求资源被浏览器转发至授权服务器</p><p>浏览器向资源拥有者索要授权，之后将用户授权发送给授权服务器</p><p>授权服务器将AccessToken以Hash的形式存放在重定向uri的fargment中发送给浏览器</p><p>浏览器访问重定向URI</p><p>资源服务器返回一个脚本，用以解析Hash中的AccessToken</p><p>浏览器将Access Token解析出来</p><p>将解析出的Access Token发送给client</p><p>一般简化模式用于没有服务器端的第三方单页面应用，因为没有服务器端就无法使用授权码模式。</p><p><strong>注：一般使用前三种模式</strong></p><h4 id="4-oauth授权服务器搭建"><a class="markdownIt-Anchor" href="#4-oauth授权服务器搭建"></a> 4. oauth授权服务器搭建</h4><p>版本：</p><ul><li>springboot：1.4.5</li><li>security：1.4.5</li><li>oauth2：2.0.13</li><li>redis：4.0</li></ul><h5 id="1-创建springboot工程并引入oauth相关依赖"><a class="markdownIt-Anchor" href="#1-创建springboot工程并引入oauth相关依赖"></a> 1. 创建springboot工程并引入oauth相关依赖</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security.oauth<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-oauth2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--jwttoken依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-jwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--oauth客户端详情数据库存取相关依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.41<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-oauthconfig配置"><a class="markdownIt-Anchor" href="#2-oauthconfig配置"></a> 2. OauthConfig配置</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@EnableAuthorizationServer</span></span></span><br><span class="line"><span class="comment"> * 工具方法，用来在当前应用context里(必须是一个DispatcherServlet context)</span></span><br><span class="line"><span class="comment"> * 开启一个授权server(例如AuthorizationEndpoint)和一个TokenEndpoint。</span></span><br><span class="line"><span class="comment"> * server的多个属性可以通过自定义AuthorizationServerConfigurer类型</span></span><br><span class="line"><span class="comment"> * (如AuthorizationServerConfigurerAdapter的扩展)的Bean来定制</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableAuthorizationServer</span></span><br><span class="line"><span class="meta">@AutoConfigureAfter</span>(WebSecurityConfig.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OAuth2Config</span>  <span class="keyword">extends</span> <span class="title">AuthorizationServerConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//AuthenticationManager为认证入口的接口</span></span><br><span class="line">    <span class="comment">//通过该接口可以获得用户相关信息、安全实体的标识以及认证请求的上下文信息</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AuthenticationManager authenticationManager;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisCacheProperties redisCacheProperties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AuthenticationProvider authenticationProvider;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jwt.store.password:zaq12wsx&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String jwtPass;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//jwtToken转换bean 替换oauth默认生成的token</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JwtAccessTokenConverter <span class="title">jwtAccessTokenConverter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JwtAccessTokenConverter converter = <span class="keyword">new</span> JwtAccessTokenConverter();</span><br><span class="line">        KeyPair keyPair = <span class="keyword">new</span> KeyStoreKeyFactory(</span><br><span class="line">                <span class="keyword">new</span> ClassPathResource(<span class="string">"jwt.jks"</span>), <span class="string">"zaq12wsx"</span>.toCharArray())</span><br><span class="line">                .getKeyPair(<span class="string">"jwt"</span>);</span><br><span class="line">        converter.setKeyPair(keyPair);</span><br><span class="line">        <span class="keyword">return</span> converter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//jedis连接工厂bean</span></span><br><span class="line">    <span class="meta">@Bean</span>(<span class="string">"connection4jwt"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> JedisConnectionFactory <span class="title">jedisConnectionFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JedisPoolConfig jedisPoolConfig = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">        jedisPoolConfig.setMaxWaitMillis(redisCacheProperties.getMaxWaitMillis());</span><br><span class="line">        jedisPoolConfig.setMaxIdle(redisCacheProperties.getMaxIdle());</span><br><span class="line">        jedisPoolConfig.setMaxTotal(redisCacheProperties.getMaxTotal());</span><br><span class="line"></span><br><span class="line">        JedisConnectionFactory factory = <span class="keyword">new</span> JedisConnectionFactory(jedisPoolConfig);</span><br><span class="line">        factory.setHostName(redisCacheProperties.getHost());</span><br><span class="line">        factory.setPort(redisCacheProperties.getPort());</span><br><span class="line">        factory.setDatabase(<span class="number">1</span>);</span><br><span class="line">        factory.setPassword(redisCacheProperties.getPassword());</span><br><span class="line">        factory.afterPropertiesSet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> factory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置Token  redis存储bean</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TokenStore <span class="title">tokenStore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        RedisTokenStore redisTokenStore = <span class="keyword">new</span> RedisTokenStore(jedisConnectionFactory());</span><br><span class="line">        redisTokenStore.setPrefix(<span class="string">"auth-server.jwt"</span>);</span><br><span class="line">        <span class="keyword">return</span> redisTokenStore;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置基于数据库的客户端详情存取</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(ClientDetailsServiceConfigurer clients)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        clients.jdbc(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用来配置授权（authorization）以及令牌（token）的访问端点和令牌服务(token services)。</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthorizationServerEndpointsConfigurer endpoints)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        endpoints.authenticationManager(authenticationManager)</span><br><span class="line">                .accessTokenConverter(jwtAccessTokenConverter())<span class="comment">//配置jwt转换器</span></span><br><span class="line">                .authorizationCodeServices(<span class="keyword">new</span> AuthorizationCodeServices(dataSource))<span class="comment">//配置授权码</span></span><br><span class="line">                .tokenStore(tokenStore()).reuseRefreshTokens(<span class="keyword">false</span>)<span class="comment">//配置token存储</span></span><br><span class="line">                .userDetailsService(userDetailsService);<span class="comment">//配置基于数据库验证账户密码</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//oauth获取token，鉴权token的逻辑都在DefaultTokenServices中，它实现了两个接口</span></span><br><span class="line">        <span class="comment">//AuthorizationServerTokenServices ：创建，刷新，获取访问令牌</span></span><br><span class="line">        <span class="comment">//ResourceServerTokenServices ：加载凭据，获取token的详情</span></span><br><span class="line">        <span class="comment">// 构建TokenServices</span></span><br><span class="line">        TokenServices tokenServices = <span class="keyword">new</span> TokenServices();</span><br><span class="line">        tokenServices.setTokenStore(tokenStore());</span><br><span class="line">        tokenServices.setSupportRefreshToken(<span class="keyword">true</span>);</span><br><span class="line">        tokenServices.setReuseRefreshToken(<span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">//从数据库获取client详情</span></span><br><span class="line">        tokenServices.setClientDetailsService(endpoints.getClientDetailsService());</span><br><span class="line">        tokenServices.setTokenEnhancer(jwtAccessTokenConverter());</span><br><span class="line"></span><br><span class="line">        endpoints.tokenServices(tokenServices);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用来配置令牌端点(Token Endpoint)的安全约束.</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthorizationServerSecurityConfigurer oauthServer)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        oauthServer.tokenKeyAccess(<span class="string">"permitAll()"</span>).checkTokenAccess(</span><br><span class="line">                <span class="string">"isAuthenticated()"</span>).allowFormAuthenticationForClients();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//ProviderManager 为AuthenticationManager 的认证实现类</span></span><br><span class="line">    <span class="comment">//认证方法authenticate()</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    认证流程：1.封装UsernamePasswordAuthenticationToken（主要是将用户输入的用户名密码进行封装，并提供给AuthenticationManager进行验证，验证成功后，返回一个认证成功的UsernamePasswordAuthenticationToken对象）设置用户未认证</span></span><br><span class="line"><span class="comment">    2.ProviderManager.authenticate() 轮询成员变量List&lt;AuthenticationProvider&gt; providerList，只要其supports函数返回true，就执行该AuthenticationProvider的authenticate</span></span><br><span class="line"><span class="comment">    方法，验证成功后重新组装UsernamePasswordAuthenticationToken，并设置用户已认证</span></span><br><span class="line"><span class="comment">    </span></span><br><span class="line"><span class="comment">    注，若要自定义认证方式，则实现AuthenticationProvider接口即可</span></span><br><span class="line"><span class="comment">    **/</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ProviderManager <span class="title">authenticationManager</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;AuthenticationProvider&gt; providerList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        providerList.add(authenticationProvider);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ProviderManager(providerList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>DefaultTokenServices详解：</strong><a href="https://www.jianshu.com/p/1fba33b26976" target="_blank" rel="noopener">https://www.jianshu.com/p/1fba33b26976</a></p><p><strong>AuthenticationManager 详解</strong>：<a href="https://www.cnblogs.com/xuwenjin/p/9565356.html" target="_blank" rel="noopener">https://www.cnblogs.com/xuwenjin/p/9565356.html</a></p><h5 id="3-authenticationprovider实现类"><a class="markdownIt-Anchor" href="#3-authenticationprovider实现类"></a> 3. AuthenticationProvider实现类</h5><p>核心代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Authentication <span class="title">authenticate</span><span class="params">(Authentication authentication)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;</span><br><span class="line">    String userName = authentication.getName();</span><br><span class="line">    String password = (String) authentication.getCredentials();</span><br><span class="line">    UserDetails userDetails = userDetailsService.loadUserByUsername(userName);</span><br><span class="line">    <span class="keyword">if</span> (userDetails == <span class="keyword">null</span>) &#123;</span><br><span class="line">        logger.debug(<span class="string">"Authentication failed: user doesn't exists!"</span>);</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> BadCredentialsException(<span class="keyword">this</span>.messages.getMessage(<span class="string">"AbstractUserDetailsAuthenticationProvider.badCredentials"</span>, <span class="string">"Bad credentials"</span>));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        String userPassWord = userDetails.getPassword();</span><br><span class="line">        <span class="keyword">if</span> (userPassWord.equals(password) || userPassWord.equals(PasswordUtil.encodePassword(password, userName)) ||</span><br><span class="line">                userPassWord.equals(PasswordUtil.encodePassword(passwordMd5Encode(password), userName))) &#123;</span><br><span class="line">            <span class="comment">//校验用户是否已过期或被锁住等</span></span><br><span class="line">            <span class="keyword">if</span> (UserLoginHoldUtil.canUserLoginByAuth(userDetails)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> UsernamePasswordAuthenticationToken(userDetails, password, userDetails.getAuthorities());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                logger.debug(<span class="string">"Authentication failed: user cannot login!"</span>);</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> BadCredentialsException(<span class="keyword">this</span>.messages.getMessage(<span class="string">"AbstractUserDetailsAuthenticationProvider.badCredentials"</span>, <span class="string">"Bad credentials"</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            logger.debug(<span class="string">"Authentication failed: password does not match stored value!"</span>);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> BadCredentialsException(<span class="keyword">this</span>.messages.getMessage(<span class="string">"AbstractUserDetailsAuthenticationProvider.badCredentials"</span>, <span class="string">"Bad credentials"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-websecurityconfig-配置"><a class="markdownIt-Anchor" href="#4-websecurityconfig-配置"></a> 4. WebSecurityConfig 配置</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * WebSecurityConfigurerAdapter是默认情况下spring security的http配置</span></span><br><span class="line"><span class="comment"> 其过滤器链默认值为100</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="comment">//指定的类加载完了再加载本类</span></span><br><span class="line"><span class="meta">@AutoConfigureAfter</span>(AuthProviderConfig.class)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;security.success.defaultTargetUrl:&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String defaultTargetUrl;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AuthenticationProvider authenticationProvider;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="comment">//security本身是有认证页面的，这里设置security的成功失败的路径等等</span></span><br><span class="line">        SimpleUrlLogoutSuccessHandler logoutSuccessHandler = <span class="keyword">new</span> SimpleUrlLogoutSuccessHandler();</span><br><span class="line">        logoutSuccessHandler.setTargetUrlParameter(<span class="string">"redirect_uri"</span>);</span><br><span class="line"></span><br><span class="line">        SavedRequestAwareAuthenticationSuccessHandler successHandler = <span class="keyword">new</span> SavedRequestAwareAuthenticationSuccessHandler();</span><br><span class="line">        successHandler.setTargetUrlParameter(<span class="string">"redirect_uri"</span>);</span><br><span class="line">        successHandler.setDefaultTargetUrl(defaultTargetUrl);</span><br><span class="line"></span><br><span class="line">        http.httpBasic().disable().csrf().disable().logout().logoutSuccessHandler(logoutSuccessHandler).and().formLogin().loginPage(<span class="string">"/login"</span>).successHandler(successHandler).defaultSuccessUrl(defaultTargetUrl).permitAll().and().authorizeRequests()</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">            此处是设置哪些http请求通过，哪些http请求需要被认证，</span></span><br><span class="line"><span class="comment">            ResourceServerConfigurerAdapter中的http设置会跟web中的功能一样</span></span><br><span class="line"><span class="comment">     不过ResourceServerConfigurerAdapter的过滤器链默认执行顺序为3</span></span><br><span class="line"><span class="comment">            **/</span></span><br><span class="line">                .antMatchers(<span class="string">"/oauth/**"</span>).permitAll()</span><br><span class="line">                .antMatchers(<span class="string">"/register"</span>, <span class="string">"/usr/verifyUserName"</span>, <span class="string">"/usr/sendVerifyCode"</span>, <span class="string">"/usr/register"</span>).permitAll()</span><br><span class="line">                .antMatchers(<span class="string">"/fp_phone"</span>, <span class="string">"/fp_reset"</span>, <span class="string">"/usr/fp/verifyPhoneEffect"</span>, <span class="string">"/usr/fp/resetPwd"</span>).permitAll()</span><br><span class="line">                .antMatchers(<span class="string">"/MP_verify_RIPzMyhi7TAhrr1q.txt"</span>).permitAll()   <span class="comment">//保证微信内不提示安全验证信息</span></span><br><span class="line">                .anyRequest().authenticated();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//security认证配置，使用自定义的认证类</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        auth.authenticationProvider(authenticationProvider);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ResourceServerConfigurerAdapter 与WebSecurityConfigurerAdapter 对比详解</strong>：<a href="https://www.jianshu.com/p/fe1194ca8ecd" target="_blank" rel="noopener">https://www.jianshu.com/p/fe1194ca8ecd</a></p><h5 id="5-授权码生成实现类authorizationcodeservices"><a class="markdownIt-Anchor" href="#5-授权码生成实现类authorizationcodeservices"></a> 5. 授权码生成实现类AuthorizationCodeServices</h5><p>核心代码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">createAuthorizationCode</span><span class="params">(OAuth2Authentication authentication)</span> </span>&#123;</span><br><span class="line">    String code = generator.generate();</span><br><span class="line">    store(code, authentication);</span><br><span class="line">    <span class="keyword">return</span> code;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>继承于默认实现类JdbcAuthorizationCodeServices：存储code于数据库表oauth_code中，删除code</p><p>又继承于默认实现类RandomValueAuthorizationCodeServices</p><h4 id="5-资源服务器搭建"><a class="markdownIt-Anchor" href="#5-资源服务器搭建"></a> 5. 资源服务器搭建</h4><h5 id="1-引入依赖"><a class="markdownIt-Anchor" href="#1-引入依赖"></a> 1. 引入依赖</h5><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-actuator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security.oauth<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-oauth2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.security<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-security-jwt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-resourceserverconfig-配置"><a class="markdownIt-Anchor" href="#2-resourceserverconfig-配置"></a> 2. ResourceServerConfig 配置</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 资源服务配置.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zly</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">资源服务器通过 <span class="doctag">@EnableResourceServer</span> 注解来开启一个 OAuth2AuthenticationProcessingFilter 类型的过滤器</span></span><br><span class="line"><span class="comment">解析令牌的方法</span></span><br><span class="line"><span class="comment">1.使用 DefaultTokenServices 在资源服务器本地配置令牌存储、解码、解析方式</span></span><br><span class="line"><span class="comment">**/</span></span><br><span class="line"><span class="meta">@EnableResourceServer</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty</span>(name = <span class="string">"security.enabled"</span>, havingValue = <span class="string">"true"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResourceServerConfig</span> <span class="keyword">extends</span> <span class="title">ResourceServerConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*每个服务依赖时资源id为应用名字*/</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.application.name:spring-boot-application&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String resourceId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;jwt.store.password:zaq12wsx&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String jwtPass;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(ResourceServerSecurityConfigurer resources)</span> </span>&#123;</span><br><span class="line">        resources.resourceId(resourceId);<span class="comment">//（必须配）</span></span><br><span class="line">        <span class="comment">//资源服务配置tokenServices（非必须）</span></span><br><span class="line">        resources.tokenServices(defaultTokenServices());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http.requestMatcher(<span class="keyword">new</span> OAuthRequestedMatcher()).authorizeRequests().antMatchers(HttpMethod.OPTIONS).permitAll()</span><br><span class="line">                .anyRequest().authenticated();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> UserDetailsService <span class="title">userDetailsService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> OAuthUserDetailsService();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//DefaultAccessTokenConverter又使用DefaultUserAuthenticationConverter来做用户密码角色相关</span></span><br><span class="line">    <span class="comment">//若为非对称加密必须配</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JwtAccessTokenConverter <span class="title">jwtAccessTokenConverter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JwtAccessTokenConverter converter = <span class="keyword">new</span> JwtAccessTokenConverter();</span><br><span class="line">        KeyPair keyPair = <span class="keyword">new</span> KeyStoreKeyFactory(</span><br><span class="line">                <span class="keyword">new</span> ClassPathResource(<span class="string">"jwt.jks"</span>), jwtPass.toCharArray())</span><br><span class="line">                .getKeyPair(<span class="string">"jwt"</span>);</span><br><span class="line">        converter.setKeyPair(keyPair);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//可不配置</span></span><br><span class="line">        DefaultAccessTokenConverter accessTokenConverter = <span class="keyword">new</span> DefaultAccessTokenConverter();</span><br><span class="line"></span><br><span class="line">        DefaultUserAuthenticationConverter userAuthenticationConverter = <span class="keyword">new</span> DefaultUserAuthenticationConverter();</span><br><span class="line">        userAuthenticationConverter.setUserDetailsService(userDetailsService());</span><br><span class="line"></span><br><span class="line">        accessTokenConverter.setUserTokenConverter(userAuthenticationConverter);</span><br><span class="line">        converter.setAccessTokenConverter(accessTokenConverter);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> converter;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//若不配置会使用内存存储（则无法解析）</span></span><br><span class="line">    <span class="comment">//配置jwtTokenStore，解析token用到的是jwtAccessTokenConverter</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> TokenStore <span class="title">tokenStore</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JwtTokenStore tokenStore = <span class="keyword">new</span> JwtTokenStore(jwtAccessTokenConverter());</span><br><span class="line">        <span class="keyword">return</span> tokenStore;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//（非必须）</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ResourceServerTokenServices <span class="title">defaultTokenServices</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> DefaultTokenServices defaultTokenServices = <span class="keyword">new</span> DefaultTokenServices();</span><br><span class="line">        defaultTokenServices.setTokenEnhancer(jwtAccessTokenConverter());</span><br><span class="line">        defaultTokenServices.setTokenStore(tokenStore());</span><br><span class="line">        <span class="keyword">return</span> defaultTokenServices;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//（非必须）</span></span><br><span class="line">    <span class="comment">//http请求过滤</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">OAuthRequestedMatcher</span> <span class="keyword">implements</span> <span class="title">RequestMatcher</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">matches</span><span class="params">(HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">            String auth = request.getHeader(<span class="string">"Authorization"</span>);</span><br><span class="line">            <span class="comment">// Determine if the client request contained an OAuth Authorization</span></span><br><span class="line">            <span class="keyword">boolean</span> haveOauth2Token = (auth != <span class="keyword">null</span>) &amp;&amp; StringUtils.startsWithIgnoreCase(auth, <span class="string">"Bearer"</span>);</span><br><span class="line">            <span class="keyword">boolean</span> haveAccessToken = request.getParameter(<span class="string">"access_token"</span>) != <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">return</span> haveOauth2Token || haveAccessToken;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ResourceServerConfig详解</strong>：<a href="https://www.jianshu.com/p/6dd03375224d" target="_blank" rel="noopener">https://www.jianshu.com/p/6dd03375224d</a></p><h5 id="3-websecurityconfig-配置"><a class="markdownIt-Anchor" href="#3-websecurityconfig-配置"></a> 3. WebSecurityConfig 配置</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> zly</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity</span>(prePostEnabled = <span class="keyword">true</span>,securedEnabled = <span class="keyword">true</span>)</span><br><span class="line"><span class="comment">//@EnableGlobalMethodSecurity(prePostEnabled = true)</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty</span>(name = <span class="string">"security.enabled"</span>, havingValue = <span class="string">"true"</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebSecurityConfig</span> <span class="keyword">extends</span> <span class="title">WebSecurityConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        http.cors().and()</span><br><span class="line">                .authorizeRequests()</span><br><span class="line">                .antMatchers(HttpMethod.OPTIONS).permitAll()</span><br><span class="line">                .antMatchers(<span class="string">"/wxAdapter"</span>, <span class="string">"/wxAdapter/*"</span>).permitAll()</span><br><span class="line">                .anyRequest().authenticated()</span><br><span class="line">                .and().httpBasic()</span><br><span class="line">                .and().csrf().disable();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最好的放开方式，resourceServerConfig中不配置请求过滤，在security的配置中使用，因为security在</p><p>yml文件里有已存在的标签来控制。</p><p><img src="https://pic.yupoo.com/zly1024/5b7a5a18/bd0c469f.png" alt="securityyml标签"></p><h4 id="6-认证授权全流程过程以及源码分析"><a class="markdownIt-Anchor" href="#6-认证授权全流程过程以及源码分析"></a> 6. 认证授权全流程过程以及源码分析</h4><h5 id="1第一步登陆认证"><a class="markdownIt-Anchor" href="#1第一步登陆认证"></a> 1.第一步：登陆认证</h5><p>用户访问受限的资源服务页面,页面判断code的存在跳转到授权服务器登陆页面（我的redirect_uri设置为localhost：8083，即我资源服务器地址为localhost：8083)，请求url为：</p><p><a href="http://localhost:9999/oauth/authorize?response_type=code&amp;client_id=shopapp&amp;redirect_uri=http://localhost:8083" target="_blank" rel="noopener">http://localhost:9999/oauth/authorize?response_type=code&amp;client_id=shopapp&amp;redirect_uri=http://localhost:8083</a></p><p>获取code时先判断用户是否已认证：</p><p><img src="https://pic.yupoo.com/zly1024/cd77c661/61ba5b43.png" alt="获取code"></p><p><img src="https://pic.yupoo.com/zly1024/259df8b8/6e7090ef.png" alt="登陆认证页面"></p><p>security认证入口：</p><p><img src="https://pic.yupoo.com/zly1024/982422bb/a14838cd.png" alt="登陆认证入口"></p><p>Authentication.authenticate():默认实现类ProvideManager</p><p><img src="https://pic.yupoo.com/zly1024/1d292eed/7e819532.png" alt="登陆认证_1"></p><p>此类有一个成员变量List<authenticationprovider> providerList = new ArrayList&lt;&gt;();</authenticationprovider></p><p>最后执行的是AuthenticationProvider.authenticate();下图是自定义的AuthenticationProvider对象</p><p><img src="https://pic.yupoo.com/zly1024/38c377e8/5202f7d0.png" alt="登陆认证_2"></p><p>登陆认证完成之后会返回Authentication对象（实现类UsernamePasswordAuthenticationToken），然后会将对象中的password清除</p><p><img src="https://pic.yupoo.com/zly1024/dd239b3e/9e47219c.png" alt="登陆认证_3"></p><p>最后会将对象存入SecurityContext中</p><p><img src="https://pic.yupoo.com/zly1024/d68fa496/b7404e76.png" alt="登陆认证出口"></p><p>之后会再次回到获取code的接口中，生成code，然后oauth会跳转到redirect_uri并带上code和state参数。</p><h5 id="2第二步授权"><a class="markdownIt-Anchor" href="#2第二步授权"></a> 2.第二步：授权</h5><p>在资源页面js中根据code和redirect_uri手动构造请求访问授权服务器获取token</p><p><img src="https://pic.yupoo.com/zly1024/fbdae2f9/aed8403f.png" alt="获取token"></p><p><img src="https://pic.yupoo.com/zly1024/52445771/97ab73de.png" alt="oauth授权入口"></p><p>经过校验传递的参数是否合法之后，会进入到TokenGranter接口-----&gt;AbstractTokenGranter抽象类的grant()方法获取token</p><p><img src="https://pic.yupoo.com/zly1024/55256eb2/7ecd752d.png" alt="获取token_1"></p><p>最终的执行方法是DefaultTokenServices.createAccessToken()</p><p><img src="https://pic.yupoo.com/zly1024/f62cc138/6f73ff39.png" alt="获取token_2"></p><p><img src="https://pic.yupoo.com/zly1024/fceb3bfe/3a6a6c01.png" alt="获取token_3"></p><p>若DefaultTokenServices中配置了TokenEnhance会执行其enhance方法替换之前生成的token格式</p><p>一般是配置jwtAccessTokenConverter</p><p><img src="https://pic.yupoo.com/zly1024/c0209a6d/7a180306.png" alt="获取token_4"></p><p>生成token成功之后会返回ResponseEntity<oauth2accesstoken>对象，最终返回给前端，存入localstage或页面其他地方。</oauth2accesstoken></p><p><img src="https://pic.yupoo.com/zly1024/70fb8fbf/33538ab2.png" alt="认证授权成功"></p><h5 id="3第三步鉴权"><a class="markdownIt-Anchor" href="#3第三步鉴权"></a> 3.第三步：鉴权</h5><p>用户访问资源需在请求头带上Authorization键，值为bearer+空格+accessToken，就能进入鉴权入口进行鉴权，鉴权通过之后即可访问资源</p><p><img src="https://pic.yupoo.com/zly1024/bf233602/8f3b9c35.png" alt="鉴权入口"></p><p><img src="https://pic.yupoo.com/zly1024/29b2d31c/2f3550b6.png" alt="鉴权_1"></p><p>然后使用Oauth2AuthenticationManager的authenticate方法鉴权认证</p><p><img src="https://pic.yupoo.com/zly1024/3ea97cdb/b8104731.png" alt="鉴权_2"></p><p>再进入DefaultTokenServices的loadAuthentication方法</p><p><img src="https://pic.yupoo.com/zly1024/830472f6/2b6f7bea.png" alt="鉴权_3"></p><p>1.执行jwtTokenStore–jwtAccessTokenConverter–DefaultAccessTokenConverter里d的方法extractAccessToken()并返回OAuth2AccessToken对象</p><p>2.执行jwtTokenStore–jwtAccessTokenConverter–DefaultAccessTokenConverter里的方法extractAuthentication()，并使用DefaultUserAuthenticationConverter的extractAuthentication方法(若配置了userDetailsService，则会去从数据库中获取角色，优先使用的时数据库返回的user和角色)返回UsernamePasswordAuthenticationToken对象</p><p>解析token方法</p><p><img src="https://pic.yupoo.com/zly1024/c7c519b4/c604949c.png" alt="鉴权_4"></p><p>鉴权认证通过之后，比对resourceIds和资源本身的resourceId</p><p><img src="https://pic.yupoo.com/zly1024/b90ce6fc/1a15bd95.png" alt="鉴权_5"></p><p>若比对成功则鉴权通过，可以访问到需访问的资源</p><p><img src="https://pic.yupoo.com/zly1024/cc172275/31d6abcc.png" alt="鉴权完成"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;oauth2总结&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#oauth2总结&quot;&gt;&lt;/a&gt; oauth2总结&lt;/h1&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 
      
    
    </summary>
    
      <category term="技术" scheme="httpS://zly1024.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="java" scheme="httpS://zly1024.github.io/tags/java/"/>
    
      <category term="框架" scheme="httpS://zly1024.github.io/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="oauth" scheme="httpS://zly1024.github.io/tags/oauth/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="httpS://zly1024.github.io/2019/07/22/hello-world/"/>
    <id>httpS://zly1024.github.io/2019/07/22/hello-world/</id>
    <published>2019-07-22T09:06:12.684Z</published>
    <updated>2019-07-23T08:44:22.039Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
      <category term="其它" scheme="httpS://zly1024.github.io/categories/%E5%85%B6%E5%AE%83/"/>
    
    
      <category term="其它" scheme="httpS://zly1024.github.io/tags/%E5%85%B6%E5%AE%83/"/>
    
  </entry>
  
</feed>
